from django.db.models.signals import post_save
from django.dispatch import receiver
from ..models import *
from django.db import transaction

@receiver(post_save, sender=TestCase)
@receiver(post_save, sender=TestCaseResult)
@receiver(post_save, sender=Section)
@receiver(post_save, sender=TestSuite)
@receiver(post_save, sender=TestPlan)
@receiver(post_save, sender=TestRun)
@receiver(post_save, sender=Milestone)
@receiver(post_save, sender=Project)
def update_user_actions(sender, instance, created, **kwargs):
    with transaction.atomic():
        print("HELLO")
        if created:
            if sender.__name__ == 'TestCaseResult':
                test_run=instance.test_run,
                if test_run.is_part_of_test_plan:
                    test_plan=instance.test_run.test_plan
                    UserAction.objects.create(
                        user=instance.created_by,
                        action = UserAction.CREATED,
                        action_object = sender.__name__,
                        action_message=f'updated result of Testcase: "{str(instance.test_case_id)}" for Test Plan: "{str(test_plan)}"',
                    )
                else:
                    UserAction.objects.create(
                        user=instance.created_by,
                        action = UserAction.CREATED,
                        action_object = sender.__name__,
                        action_message=f'updated result of Testcase: "{str(instance.test_case_id)}" for Test Run: "{str(test_run)}"',
                    )
            else:
                UserAction.objects.create(
                    user=instance.created_by,
                    action = UserAction.CREATED,
                    action_object = sender.__name__,
                    action_message=f'created {sender.__name__} "{str(instance)}"',
                )
        else:
            if sender.__name__ == 'TestCaseResult':
                test_run=instance.test_run,
                if test_run.is_part_of_test_plan:
                    test_plan=instance.test_run.test_plan
                    UserAction.objects.create(
                        user=instance.created_by,
                        action = UserAction.UPDATED,
                        action_object = sender.__name__,
                        action_message=f'updated result of Testcase: "{str(instance.test_case_id)}" for Test Plan: "{str(test_plan)}"',
                    )
                else:
                    UserAction.objects.create(
                        user=instance.created_by,
                        action = UserAction.UPDATED,
                        action_object = sender.__name__,
                        action_message=f'updated result of Testcase: "{str(instance.test_case_id)}" for Test Run: "{str(test_run)}"',
                    )
            else:
                UserAction.objects.create(
                    user=instance.created_by,
                    action = UserAction.UPDATED,
                    action_object = sender.__name__,
                    action_message=f'updated {sender.__name__} "{str(instance)}"',
                )