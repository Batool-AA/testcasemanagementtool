{"ast":null,"code":"var _jsxFileName = \"/Users/mariam.shahzad/tcms/frontend/src/components/EmailVerification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Alert } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailVerification() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [alertVariant, setAlertVariant] = useState('success');\n  const [alertMessage, setAlertMessage] = useState('Verifying email...');\n  const VERIFY_EMAIL_URL = \"http://localhost:8000/api/accounts/signup/verify/\";\n  const asyncVerifyEmail = async code => {\n    try {\n      const response = await axios.get(`${VERIFY_EMAIL_URL}?code=${code}`);\n      return response;\n    } catch (error) {\n      console.error('Error verifying email:', error);\n      throw error; // Rethrow the error to handle it in the component\n    }\n  };\n  useEffect(() => {\n    const handleVerification = async () => {\n      const urlParams = new URLSearchParams(location.search);\n      const code = urlParams.get('code');\n      try {\n        const response = await asyncVerifyEmail(code);\n        if (response && response.status === 200) {\n          setAlertVariant('success');\n          setAlertMessage('Email verified successfully.');\n          setTimeout(() => {\n            navigate('/login'); // Redirect to login after successful verification\n          }, 2000); // Wait for 2 seconds before redirecting\n        } else {\n          setAlertVariant('danger');\n          setAlertMessage('Email verification failed.');\n        }\n      } catch (error) {\n        console.error('Error verifying email:', error);\n        setAlertVariant('danger');\n        setAlertMessage('Email verification failed.');\n      }\n    };\n    handleVerification();\n  }, [location, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertVariant,\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(EmailVerification, \"x3HRnk4cmR1wVDlPOgFTbXfJgsQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = EmailVerification;\nexport default EmailVerification;\nvar _c;\n$RefreshReg$(_c, \"EmailVerification\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","Alert","axios","jsxDEV","_jsxDEV","EmailVerification","_s","navigate","location","alertVariant","setAlertVariant","alertMessage","setAlertMessage","VERIFY_EMAIL_URL","asyncVerifyEmail","code","response","get","error","console","handleVerification","urlParams","URLSearchParams","search","status","setTimeout","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariam.shahzad/tcms/frontend/src/components/EmailVerification.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Alert } from 'react-bootstrap';\nimport axios from 'axios';\n\nfunction EmailVerification() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [alertVariant, setAlertVariant] = useState('success');\n    const [alertMessage, setAlertMessage] = useState('Verifying email...');\n\n    const VERIFY_EMAIL_URL = \"http://localhost:8000/api/accounts/signup/verify/\";\n\n    const asyncVerifyEmail = async (code) => {\n        try {\n            const response = await axios.get(`${VERIFY_EMAIL_URL}?code=${code}`);\n            return response;\n        } catch (error) {\n            console.error('Error verifying email:', error);\n            throw error; // Rethrow the error to handle it in the component\n        }\n    };\n\n    useEffect(() => {\n        const handleVerification = async () => {\n            const urlParams = new URLSearchParams(location.search);\n            const code = urlParams.get('code');\n\n            try {\n                const response = await asyncVerifyEmail(code);\n\n                if (response && response.status === 200) {\n                    setAlertVariant('success');\n                    setAlertMessage('Email verified successfully.');\n                    setTimeout(() => {\n                        navigate('/login'); // Redirect to login after successful verification\n                    }, 2000); // Wait for 2 seconds before redirecting\n                } else {\n                    setAlertVariant('danger');\n                    setAlertMessage('Email verification failed.');\n                }\n            } catch (error) {\n                console.error('Error verifying email:', error);\n                setAlertVariant('danger');\n                setAlertMessage('Email verification failed.');\n            }\n        };\n\n        handleVerification();\n    }, [location, navigate]);\n\n    return (\n        <div>\n            <Alert variant={alertVariant}>{alertMessage}</Alert>\n        </div>\n    );\n}\n\nexport default EmailVerification;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,SAAS,CAAC;EAC3D,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,oBAAoB,CAAC;EAEtE,MAAMgB,gBAAgB,GAAG,mDAAmD;EAE5E,MAAMC,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACrC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,GAAGJ,gBAAgB,SAASE,IAAI,EAAE,CAAC;MACpE,OAAOC,QAAQ;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK,CAAC,CAAC;IACjB;EACJ,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZ,MAAMsB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACd,QAAQ,CAACe,MAAM,CAAC;MACtD,MAAMR,IAAI,GAAGM,SAAS,CAACJ,GAAG,CAAC,MAAM,CAAC;MAElC,IAAI;QACA,MAAMD,QAAQ,GAAG,MAAMF,gBAAgB,CAACC,IAAI,CAAC;QAE7C,IAAIC,QAAQ,IAAIA,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;UACrCd,eAAe,CAAC,SAAS,CAAC;UAC1BE,eAAe,CAAC,8BAA8B,CAAC;UAC/Ca,UAAU,CAAC,MAAM;YACblB,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;UACxB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACd,CAAC,MAAM;UACHG,eAAe,CAAC,QAAQ,CAAC;UACzBE,eAAe,CAAC,4BAA4B,CAAC;QACjD;MACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CR,eAAe,CAAC,QAAQ,CAAC;QACzBE,eAAe,CAAC,4BAA4B,CAAC;MACjD;IACJ,CAAC;IAEDQ,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACZ,QAAQ,EAAED,QAAQ,CAAC,CAAC;EAExB,oBACIH,OAAA;IAAAsB,QAAA,eACItB,OAAA,CAACH,KAAK;MAAC0B,OAAO,EAAElB,YAAa;MAAAiB,QAAA,EAAEf;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEd;AAACzB,EAAA,CAnDQD,iBAAiB;EAAA,QACLN,WAAW,EACXC,WAAW;AAAA;AAAAgC,EAAA,GAFvB3B,iBAAiB;AAqD1B,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}